// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/gni.proto

package gni

import (
	context "context"
	fmt "fmt"
	gnmi "github.com/gniproject/gni_prototype/src/api/gnmi"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FetchRequest struct {
	// Types that are valid to be assigned to Frequest:
	//	*FetchRequest_GnmiGetRequest
	//	*FetchRequest_GnmiCapabilityRequest
	Frequest             isFetchRequest_Frequest `protobuf_oneof:"frequest"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *FetchRequest) Reset()         { *m = FetchRequest{} }
func (m *FetchRequest) String() string { return proto.CompactTextString(m) }
func (*FetchRequest) ProtoMessage()    {}
func (*FetchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_21199cbfa227c89e, []int{0}
}

func (m *FetchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRequest.Unmarshal(m, b)
}
func (m *FetchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRequest.Marshal(b, m, deterministic)
}
func (m *FetchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRequest.Merge(m, src)
}
func (m *FetchRequest) XXX_Size() int {
	return xxx_messageInfo_FetchRequest.Size(m)
}
func (m *FetchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRequest proto.InternalMessageInfo

type isFetchRequest_Frequest interface {
	isFetchRequest_Frequest()
}

type FetchRequest_GnmiGetRequest struct {
	GnmiGetRequest *gnmi.GetRequest `protobuf:"bytes,1,opt,name=gnmiGetRequest,proto3,oneof"`
}

type FetchRequest_GnmiCapabilityRequest struct {
	GnmiCapabilityRequest *gnmi.CapabilityRequest `protobuf:"bytes,2,opt,name=gnmiCapabilityRequest,proto3,oneof"`
}

func (*FetchRequest_GnmiGetRequest) isFetchRequest_Frequest() {}

func (*FetchRequest_GnmiCapabilityRequest) isFetchRequest_Frequest() {}

func (m *FetchRequest) GetFrequest() isFetchRequest_Frequest {
	if m != nil {
		return m.Frequest
	}
	return nil
}

func (m *FetchRequest) GetGnmiGetRequest() *gnmi.GetRequest {
	if x, ok := m.GetFrequest().(*FetchRequest_GnmiGetRequest); ok {
		return x.GnmiGetRequest
	}
	return nil
}

func (m *FetchRequest) GetGnmiCapabilityRequest() *gnmi.CapabilityRequest {
	if x, ok := m.GetFrequest().(*FetchRequest_GnmiCapabilityRequest); ok {
		return x.GnmiCapabilityRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FetchRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FetchRequest_GnmiGetRequest)(nil),
		(*FetchRequest_GnmiCapabilityRequest)(nil),
	}
}

type FetchResponse struct {
	// Types that are valid to be assigned to Fresponse:
	//	*FetchResponse_GnmiGetResponse
	//	*FetchResponse_GnmiCapabilityResponse
	Fresponse            isFetchResponse_Fresponse `protobuf_oneof:"fresponse"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *FetchResponse) Reset()         { *m = FetchResponse{} }
func (m *FetchResponse) String() string { return proto.CompactTextString(m) }
func (*FetchResponse) ProtoMessage()    {}
func (*FetchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_21199cbfa227c89e, []int{1}
}

func (m *FetchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchResponse.Unmarshal(m, b)
}
func (m *FetchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchResponse.Marshal(b, m, deterministic)
}
func (m *FetchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchResponse.Merge(m, src)
}
func (m *FetchResponse) XXX_Size() int {
	return xxx_messageInfo_FetchResponse.Size(m)
}
func (m *FetchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchResponse proto.InternalMessageInfo

type isFetchResponse_Fresponse interface {
	isFetchResponse_Fresponse()
}

type FetchResponse_GnmiGetResponse struct {
	GnmiGetResponse *gnmi.GetResponse `protobuf:"bytes,1,opt,name=gnmiGetResponse,proto3,oneof"`
}

type FetchResponse_GnmiCapabilityResponse struct {
	GnmiCapabilityResponse *gnmi.CapabilityResponse `protobuf:"bytes,2,opt,name=gnmiCapabilityResponse,proto3,oneof"`
}

func (*FetchResponse_GnmiGetResponse) isFetchResponse_Fresponse() {}

func (*FetchResponse_GnmiCapabilityResponse) isFetchResponse_Fresponse() {}

func (m *FetchResponse) GetFresponse() isFetchResponse_Fresponse {
	if m != nil {
		return m.Fresponse
	}
	return nil
}

func (m *FetchResponse) GetGnmiGetResponse() *gnmi.GetResponse {
	if x, ok := m.GetFresponse().(*FetchResponse_GnmiGetResponse); ok {
		return x.GnmiGetResponse
	}
	return nil
}

func (m *FetchResponse) GetGnmiCapabilityResponse() *gnmi.CapabilityResponse {
	if x, ok := m.GetFresponse().(*FetchResponse_GnmiCapabilityResponse); ok {
		return x.GnmiCapabilityResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FetchResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FetchResponse_GnmiGetResponse)(nil),
		(*FetchResponse_GnmiCapabilityResponse)(nil),
	}
}

type StoreRequest struct {
	// Types that are valid to be assigned to Srequest:
	//	*StoreRequest_GnmiSetRequest
	Srequest             isStoreRequest_Srequest `protobuf_oneof:"srequest"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *StoreRequest) Reset()         { *m = StoreRequest{} }
func (m *StoreRequest) String() string { return proto.CompactTextString(m) }
func (*StoreRequest) ProtoMessage()    {}
func (*StoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_21199cbfa227c89e, []int{2}
}

func (m *StoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreRequest.Unmarshal(m, b)
}
func (m *StoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreRequest.Marshal(b, m, deterministic)
}
func (m *StoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreRequest.Merge(m, src)
}
func (m *StoreRequest) XXX_Size() int {
	return xxx_messageInfo_StoreRequest.Size(m)
}
func (m *StoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreRequest proto.InternalMessageInfo

type isStoreRequest_Srequest interface {
	isStoreRequest_Srequest()
}

type StoreRequest_GnmiSetRequest struct {
	GnmiSetRequest *gnmi.SetRequest `protobuf:"bytes,1,opt,name=gnmiSetRequest,proto3,oneof"`
}

func (*StoreRequest_GnmiSetRequest) isStoreRequest_Srequest() {}

func (m *StoreRequest) GetSrequest() isStoreRequest_Srequest {
	if m != nil {
		return m.Srequest
	}
	return nil
}

func (m *StoreRequest) GetGnmiSetRequest() *gnmi.SetRequest {
	if x, ok := m.GetSrequest().(*StoreRequest_GnmiSetRequest); ok {
		return x.GnmiSetRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StoreRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StoreRequest_GnmiSetRequest)(nil),
	}
}

type StoreResponse struct {
	// Types that are valid to be assigned to Sresponse:
	//	*StoreResponse_GnmiSetResponse
	Sresponse            isStoreResponse_Sresponse `protobuf_oneof:"sresponse"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *StoreResponse) Reset()         { *m = StoreResponse{} }
func (m *StoreResponse) String() string { return proto.CompactTextString(m) }
func (*StoreResponse) ProtoMessage()    {}
func (*StoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_21199cbfa227c89e, []int{3}
}

func (m *StoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreResponse.Unmarshal(m, b)
}
func (m *StoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreResponse.Marshal(b, m, deterministic)
}
func (m *StoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreResponse.Merge(m, src)
}
func (m *StoreResponse) XXX_Size() int {
	return xxx_messageInfo_StoreResponse.Size(m)
}
func (m *StoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StoreResponse proto.InternalMessageInfo

type isStoreResponse_Sresponse interface {
	isStoreResponse_Sresponse()
}

type StoreResponse_GnmiSetResponse struct {
	GnmiSetResponse *gnmi.SetResponse `protobuf:"bytes,1,opt,name=gnmiSetResponse,proto3,oneof"`
}

func (*StoreResponse_GnmiSetResponse) isStoreResponse_Sresponse() {}

func (m *StoreResponse) GetSresponse() isStoreResponse_Sresponse {
	if m != nil {
		return m.Sresponse
	}
	return nil
}

func (m *StoreResponse) GetGnmiSetResponse() *gnmi.SetResponse {
	if x, ok := m.GetSresponse().(*StoreResponse_GnmiSetResponse); ok {
		return x.GnmiSetResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StoreResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StoreResponse_GnmiSetResponse)(nil),
	}
}

type StreamRequest struct {
	// Types that are valid to be assigned to Srequest:
	//	*StreamRequest_GnmiSubRequest
	Srequest             isStreamRequest_Srequest `protobuf_oneof:"srequest"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *StreamRequest) Reset()         { *m = StreamRequest{} }
func (m *StreamRequest) String() string { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()    {}
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_21199cbfa227c89e, []int{4}
}

func (m *StreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest.Unmarshal(m, b)
}
func (m *StreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest.Marshal(b, m, deterministic)
}
func (m *StreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest.Merge(m, src)
}
func (m *StreamRequest) XXX_Size() int {
	return xxx_messageInfo_StreamRequest.Size(m)
}
func (m *StreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest proto.InternalMessageInfo

type isStreamRequest_Srequest interface {
	isStreamRequest_Srequest()
}

type StreamRequest_GnmiSubRequest struct {
	GnmiSubRequest *gnmi.SubscribeRequest `protobuf:"bytes,1,opt,name=gnmiSubRequest,proto3,oneof"`
}

func (*StreamRequest_GnmiSubRequest) isStreamRequest_Srequest() {}

func (m *StreamRequest) GetSrequest() isStreamRequest_Srequest {
	if m != nil {
		return m.Srequest
	}
	return nil
}

func (m *StreamRequest) GetGnmiSubRequest() *gnmi.SubscribeRequest {
	if x, ok := m.GetSrequest().(*StreamRequest_GnmiSubRequest); ok {
		return x.GnmiSubRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamRequest_GnmiSubRequest)(nil),
	}
}

type StreamResponse struct {
	// Types that are valid to be assigned to Sresponse:
	//	*StreamResponse_GnmiSubResponse
	Sresponse            isStreamResponse_Sresponse `protobuf_oneof:"sresponse"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *StreamResponse) Reset()         { *m = StreamResponse{} }
func (m *StreamResponse) String() string { return proto.CompactTextString(m) }
func (*StreamResponse) ProtoMessage()    {}
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_21199cbfa227c89e, []int{5}
}

func (m *StreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse.Unmarshal(m, b)
}
func (m *StreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse.Marshal(b, m, deterministic)
}
func (m *StreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse.Merge(m, src)
}
func (m *StreamResponse) XXX_Size() int {
	return xxx_messageInfo_StreamResponse.Size(m)
}
func (m *StreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse proto.InternalMessageInfo

type isStreamResponse_Sresponse interface {
	isStreamResponse_Sresponse()
}

type StreamResponse_GnmiSubResponse struct {
	GnmiSubResponse *gnmi.SubscribeResponse `protobuf:"bytes,1,opt,name=gnmiSubResponse,proto3,oneof"`
}

func (*StreamResponse_GnmiSubResponse) isStreamResponse_Sresponse() {}

func (m *StreamResponse) GetSresponse() isStreamResponse_Sresponse {
	if m != nil {
		return m.Sresponse
	}
	return nil
}

func (m *StreamResponse) GetGnmiSubResponse() *gnmi.SubscribeResponse {
	if x, ok := m.GetSresponse().(*StreamResponse_GnmiSubResponse); ok {
		return x.GnmiSubResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamResponse_GnmiSubResponse)(nil),
	}
}

type CommandRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandRequest) Reset()         { *m = CommandRequest{} }
func (m *CommandRequest) String() string { return proto.CompactTextString(m) }
func (*CommandRequest) ProtoMessage()    {}
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_21199cbfa227c89e, []int{6}
}

func (m *CommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandRequest.Unmarshal(m, b)
}
func (m *CommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandRequest.Marshal(b, m, deterministic)
}
func (m *CommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandRequest.Merge(m, src)
}
func (m *CommandRequest) XXX_Size() int {
	return xxx_messageInfo_CommandRequest.Size(m)
}
func (m *CommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommandRequest proto.InternalMessageInfo

type CommandResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandResponse) Reset()         { *m = CommandResponse{} }
func (m *CommandResponse) String() string { return proto.CompactTextString(m) }
func (*CommandResponse) ProtoMessage()    {}
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_21199cbfa227c89e, []int{7}
}

func (m *CommandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandResponse.Unmarshal(m, b)
}
func (m *CommandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandResponse.Marshal(b, m, deterministic)
}
func (m *CommandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandResponse.Merge(m, src)
}
func (m *CommandResponse) XXX_Size() int {
	return xxx_messageInfo_CommandResponse.Size(m)
}
func (m *CommandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommandResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*FetchRequest)(nil), "gni.FetchRequest")
	proto.RegisterType((*FetchResponse)(nil), "gni.FetchResponse")
	proto.RegisterType((*StoreRequest)(nil), "gni.StoreRequest")
	proto.RegisterType((*StoreResponse)(nil), "gni.StoreResponse")
	proto.RegisterType((*StreamRequest)(nil), "gni.StreamRequest")
	proto.RegisterType((*StreamResponse)(nil), "gni.StreamResponse")
	proto.RegisterType((*CommandRequest)(nil), "gni.CommandRequest")
	proto.RegisterType((*CommandResponse)(nil), "gni.CommandResponse")
}

func init() { proto.RegisterFile("proto/gni.proto", fileDescriptor_21199cbfa227c89e) }

var fileDescriptor_21199cbfa227c89e = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0x4f, 0x4f, 0xab, 0x40,
	0x14, 0xc5, 0xcb, 0x6b, 0xda, 0xf7, 0xde, 0xed, 0xff, 0x79, 0xcf, 0xb6, 0x61, 0x65, 0x58, 0x75,
	0x05, 0x4d, 0xd5, 0x8d, 0x89, 0x89, 0x69, 0x13, 0xad, 0x1b, 0x4d, 0x20, 0x71, 0x63, 0x5c, 0x00,
	0x4e, 0xe9, 0x24, 0xc2, 0x20, 0x7f, 0x16, 0x7e, 0x22, 0x97, 0x7e, 0x17, 0x3f, 0x91, 0x81, 0xb9,
	0x50, 0x06, 0xec, 0xa6, 0xa1, 0x67, 0xee, 0x39, 0xfc, 0xee, 0x01, 0x60, 0x14, 0x46, 0x3c, 0xe1,
	0x86, 0x17, 0x30, 0x3d, 0xbf, 0x22, 0x6d, 0x2f, 0x60, 0xea, 0xd2, 0x63, 0xc9, 0x3e, 0x75, 0x74,
	0x97, 0xfb, 0x06, 0x0f, 0x69, 0xe0, 0xf2, 0x60, 0xc7, 0x3c, 0xc3, 0x0b, 0x7c, 0x66, 0x14, 0x06,
	0x9f, 0xe5, 0x3f, 0xc2, 0xa6, 0x7d, 0x28, 0xd0, 0xbf, 0xa1, 0x89, 0xbb, 0x37, 0xe9, 0x5b, 0x4a,
	0xe3, 0x84, 0x5c, 0xc2, 0x30, 0x3b, 0xbe, 0xa5, 0x09, 0x2a, 0x73, 0xe5, 0x54, 0x59, 0xf4, 0x56,
	0x63, 0x3d, 0x77, 0x1d, 0xf4, 0x6d, 0xcb, 0xac, 0x4d, 0x92, 0x07, 0x38, 0xc9, 0x94, 0x8d, 0x1d,
	0xda, 0x0e, 0x7b, 0x65, 0xc9, 0x7b, 0x11, 0xf1, 0x2b, 0x8f, 0x98, 0x89, 0x88, 0xc6, 0xf1, 0xb6,
	0x65, 0xfe, 0xec, 0x5b, 0x03, 0xfc, 0xd9, 0x45, 0xe2, 0x5a, 0xfb, 0x54, 0x60, 0x80, 0xa4, 0x71,
	0xc8, 0x83, 0x98, 0x92, 0x2b, 0x18, 0x95, 0x00, 0x42, 0x42, 0xd6, 0x49, 0x85, 0x55, 0x1c, 0x6c,
	0x5b, 0x66, 0x7d, 0x96, 0x98, 0x30, 0xad, 0xdf, 0x15, 0x53, 0x04, 0xee, 0xbc, 0x89, 0x5b, 0x86,
	0x1d, 0x71, 0xae, 0x7b, 0xf0, 0x77, 0x17, 0xe1, 0x1f, 0xed, 0x11, 0xfa, 0x56, 0xc2, 0x23, 0x5a,
	0xab, 0xd6, 0x3a, 0x52, 0xad, 0xd5, 0xa8, 0xf6, 0xa0, 0x64, 0x4d, 0xc4, 0x45, 0x13, 0x4f, 0x30,
	0xc0, 0x5c, 0xb9, 0x08, 0xeb, 0x58, 0x11, 0x56, 0xb3, 0x88, 0x8a, 0x94, 0x41, 0xc7, 0x25, 0xf4,
	0x73, 0x16, 0x1e, 0x51, 0xdb, 0x2f, 0xa8, 0xaf, 0x91, 0x3a, 0x75, 0x64, 0xea, 0x29, 0x66, 0xa7,
	0x4e, 0xec, 0x46, 0xcc, 0xa1, 0x75, 0xf6, 0x72, 0x5e, 0x62, 0x77, 0x60, 0x58, 0xc4, 0x23, 0xfc,
	0x06, 0xe1, 0xb3, 0x79, 0x09, 0x7e, 0xd6, 0xb8, 0x41, 0x6d, 0x85, 0x83, 0x43, 0x5e, 0x61, 0x0c,
	0xc3, 0x0d, 0xf7, 0x7d, 0x3b, 0x78, 0x41, 0x02, 0x6d, 0x02, 0xa3, 0x52, 0x11, 0x43, 0xab, 0x2f,
	0x05, 0xda, 0xde, 0xfd, 0x1d, 0xd1, 0xa1, 0x93, 0xbf, 0x55, 0x24, 0xeb, 0x8a, 0xe9, 0xd5, 0x6f,
	0x41, 0x25, 0x55, 0x09, 0x71, 0x75, 0xe8, 0xe4, 0xe5, 0xe3, 0x7c, 0xf5, 0x01, 0xe3, 0xbc, 0xfc,
	0x6c, 0x2e, 0xa0, 0x2b, 0x16, 0x26, 0xc5, 0x69, 0xa5, 0x5c, 0xf5, 0x9f, 0xa4, 0x09, 0xcb, 0x42,
	0x59, 0x2a, 0xe4, 0x1c, 0x7e, 0x23, 0x31, 0x11, 0x33, 0xf2, 0x46, 0xea, 0x7f, 0x59, 0x14, 0x4e,
	0xa7, 0x9b, 0x7f, 0xd4, 0x67, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x75, 0x30, 0xee, 0x1e,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GNIClient is the client API for GNI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GNIClient interface {
	Fetch(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (*FetchResponse, error)
	Store(ctx context.Context, in *StoreRequest, opts ...grpc.CallOption) (*StoreResponse, error)
	Stream(ctx context.Context, opts ...grpc.CallOption) (GNI_StreamClient, error)
	Command(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*CommandResponse, error)
}

type gNIClient struct {
	cc *grpc.ClientConn
}

func NewGNIClient(cc *grpc.ClientConn) GNIClient {
	return &gNIClient{cc}
}

func (c *gNIClient) Fetch(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (*FetchResponse, error) {
	out := new(FetchResponse)
	err := c.cc.Invoke(ctx, "/gni.gNI/Fetch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gNIClient) Store(ctx context.Context, in *StoreRequest, opts ...grpc.CallOption) (*StoreResponse, error) {
	out := new(StoreResponse)
	err := c.cc.Invoke(ctx, "/gni.gNI/Store", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gNIClient) Stream(ctx context.Context, opts ...grpc.CallOption) (GNI_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GNI_serviceDesc.Streams[0], "/gni.gNI/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &gNIStreamClient{stream}
	return x, nil
}

type GNI_StreamClient interface {
	Send(*StreamRequest) error
	Recv() (*StreamResponse, error)
	grpc.ClientStream
}

type gNIStreamClient struct {
	grpc.ClientStream
}

func (x *gNIStreamClient) Send(m *StreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gNIStreamClient) Recv() (*StreamResponse, error) {
	m := new(StreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gNIClient) Command(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/gni.gNI/Command", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GNIServer is the server API for GNI service.
type GNIServer interface {
	Fetch(context.Context, *FetchRequest) (*FetchResponse, error)
	Store(context.Context, *StoreRequest) (*StoreResponse, error)
	Stream(GNI_StreamServer) error
	Command(context.Context, *CommandRequest) (*CommandResponse, error)
}

func RegisterGNIServer(s *grpc.Server, srv GNIServer) {
	s.RegisterService(&_GNI_serviceDesc, srv)
}

func _GNI_Fetch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GNIServer).Fetch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gni.gNI/Fetch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GNIServer).Fetch(ctx, req.(*FetchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GNI_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GNIServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gni.gNI/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GNIServer).Store(ctx, req.(*StoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GNI_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GNIServer).Stream(&gNIStreamServer{stream})
}

type GNI_StreamServer interface {
	Send(*StreamResponse) error
	Recv() (*StreamRequest, error)
	grpc.ServerStream
}

type gNIStreamServer struct {
	grpc.ServerStream
}

func (x *gNIStreamServer) Send(m *StreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gNIStreamServer) Recv() (*StreamRequest, error) {
	m := new(StreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _GNI_Command_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GNIServer).Command(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gni.gNI/Command",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GNIServer).Command(ctx, req.(*CommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GNI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gni.gNI",
	HandlerType: (*GNIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Fetch",
			Handler:    _GNI_Fetch_Handler,
		},
		{
			MethodName: "Store",
			Handler:    _GNI_Store_Handler,
		},
		{
			MethodName: "Command",
			Handler:    _GNI_Command_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _GNI_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proto/gni.proto",
}
